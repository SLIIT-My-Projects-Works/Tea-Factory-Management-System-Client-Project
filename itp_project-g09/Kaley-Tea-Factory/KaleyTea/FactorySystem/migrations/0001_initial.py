# Generated by Django 3.2.5 on 2021-09-29 17:44

import FactorySystem.common_utils.validators
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='auction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockID', models.CharField(max_length=150)),
                ('teacat', models.CharField(max_length=150)),
                ('totWeight', models.CharField(max_length=150)),
                ('packages', models.CharField(max_length=150)),
                ('datePrepared', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auction',
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(blank=True)),
                ('Time', models.TimeField(blank=True)),
                ('Total_amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('Given_cash_amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('Handled_by', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Bill',
            },
        ),
        migrations.CreateModel(
            name='buyers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cname', models.CharField(max_length=150)),
                ('regNo', models.CharField(max_length=150)),
                ('Address', models.CharField(max_length=150)),
                ('PNumber', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'buyers',
            },
        ),
        migrations.CreateModel(
            name='CategoryProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cp_name', models.CharField(max_length=10)),
                ('category', models.CharField(max_length=10)),
                ('weight', models.CharField(max_length=10)),
            ],
            options={
                'unique_together': {('category', 'weight')},
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('licence_no', models.CharField(max_length=10)),
                ('epfNo', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nic', models.CharField(max_length=12, unique=True, validators=[FactorySystem.common_utils.validators.nic_validator])),
                ('epfNo', models.IntegerField(null=True, unique=True, validators=[django.core.validators.RegexValidator(code='EPF No is invalid', message='EPF No can only contain numbers', regex='^[0-9]*$')])),
                ('name', models.CharField(max_length=50)),
                ('address', models.TextField(null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=50)),
                ('dob', models.DateField(null=True)),
                ('maritalStatus', models.CharField(choices=[('Married', 'Married'), ('UnMarried', 'Unmarried')], max_length=50)),
                ('contactNo', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator(code='Invalid Contact No ', message='Contact No can only contain numbers', regex='^[0-9]*$'), django.core.validators.RegexValidator(code='Invalid Contact No ', message='Contact No length is invalid', regex='^.{10}$')])),
                ('doa', models.DateField(null=True)),
                ('basicSalary', models.FloatField(null=True)),
                ('empType', models.CharField(choices=[('Permanent', 'Permanent'), ('Temparory', 'Temparory')], max_length=50, null=True)),
                ('empGroup', models.CharField(choices=[('staff', 'Staff'), ('factory_Worker', 'FactoryWorker')], max_length=50, null=True)),
                ('designation', models.CharField(blank=True, choices=[('Factory_Officer', 'Factory_Officer'), ('AssistantFactory_Officer', 'AssistantFactory_Officer'), ('Clerk', 'Clerk'), ('Trainee', 'Trainee'), ('Supervisor', 'Supervisor'), ('Cashier', 'Cashier'), ('Driver', 'Driver')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Funds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_etf', models.FloatField()),
                ('epf_employee', models.FloatField()),
                ('epf_employer', models.FloatField()),
            ],
            options={
                'db_table': 'funds',
            },
        ),
        migrations.CreateModel(
            name='Leafstock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Suppliernicc', models.CharField(max_length=150)),
                ('Totalweight', models.CharField(max_length=150)),
                ('Receiveddate', models.CharField(max_length=150)),
                ('Receivedtime', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'Leafstock',
            },
        ),
        migrations.CreateModel(
            name='Newuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Username', models.CharField(max_length=150)),
                ('Email', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'Newuser',
            },
        ),
        migrations.CreateModel(
            name='notsoldStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockID', models.CharField(max_length=150)),
                ('teacat', models.CharField(max_length=150)),
                ('totWeight', models.CharField(max_length=150)),
                ('packages', models.CharField(max_length=150)),
                ('datePrepared', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'notsoldStock',
            },
        ),
        migrations.CreateModel(
            name='Paymentdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Suppliernic', models.CharField(max_length=150)),
                ('Supplierid', models.CharField(max_length=150)),
                ('Totalkilo', models.CharField(max_length=150)),
                ('Totalpayment', models.CharField(max_length=150)),
                ('Date', models.CharField(max_length=150)),
                ('Time', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'Paymentdata',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=50)),
                ('product_category', models.CharField(max_length=50)),
                ('product_weight', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='soldStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockID', models.CharField(max_length=150)),
                ('teacat', models.CharField(max_length=150)),
                ('totWeight', models.CharField(max_length=150)),
                ('packages', models.CharField(max_length=150)),
                ('datePrepared', models.CharField(max_length=150)),
                ('Cname', models.CharField(max_length=150)),
                ('regNo', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'soldStock',
            },
        ),
        migrations.CreateModel(
            name='Supreddeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fullname', models.CharField(max_length=150)),
                ('Nicno', models.CharField(max_length=150)),
                ('Address', models.CharField(max_length=150)),
                ('Dob', models.CharField(max_length=150)),
                ('Email', models.CharField(max_length=150)),
                ('Contactnum', models.CharField(max_length=150)),
                ('Paymenttype', models.CharField(max_length=150)),
                ('Bank', models.CharField(max_length=150)),
                ('Accountnum', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'Supreddeta',
            },
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='FactorySystem.categoryproduct')),
                ('product_price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'db_table': 'ProductPrice',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VehicleNo', models.CharField(max_length=20, unique=True)),
                ('Driverid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='FactorySystem.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=10)),
                ('weight', models.CharField(max_length=10)),
                ('available_stock', models.IntegerField()),
            ],
            options={
                'unique_together': {('category', 'weight')},
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bill_No', models.CharField(max_length=10)),
                ('Description', models.TextField()),
                ('Service_Date', models.DateField(default=datetime.datetime.now)),
                ('Amount', models.FloatField()),
                ('VehicleNo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='FactorySystem.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_on_month', models.FloatField()),
                ('year', models.CharField(max_length=4)),
                ('month', models.CharField(max_length=20)),
                ('basic_salary_of_month', models.FloatField()),
                ('etf', models.FloatField(null=True)),
                ('epf_employee', models.FloatField(null=True)),
                ('epf_employer', models.FloatField(null=True)),
                ('ot_hours', models.IntegerField(null=True)),
                ('ot_amount_for_month', models.FloatField(null=True)),
                ('loan', models.FloatField(null=True)),
                ('total_salary', models.FloatField(null=True)),
                ('emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FactorySystem.employee')),
            ],
            options={
                'db_table': 'Employee_salary',
            },
        ),
        migrations.CreateModel(
            name='Driving_Records',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(default=datetime.datetime.now)),
                ('Start_Reading', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='Start date is invalid', message='Start reading must contain only numbers', regex='^[0-9]*$')])),
                ('End_Reading', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='End date is invalid', message='End reading must contain only numbers', regex='^[0-9]*$')])),
                ('Meter_Difference', models.IntegerField(blank=True)),
                ('VehicleNo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='FactorySystem.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='DeletedProduct',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('cp_name', models.CharField(max_length=10)),
                ('category', models.CharField(max_length=10)),
                ('weight', models.CharField(max_length=10)),
            ],
            options={
                'unique_together': {('category', 'weight')},
            },
        ),
        migrations.CreateModel(
            name='Allowance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowance_by_price', models.FloatField()),
                ('incentive_1', models.FloatField()),
                ('incentive_2', models.FloatField()),
                ('emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FactorySystem.employee')),
            ],
            options={
                'db_table': 'allowance',
            },
        ),
        migrations.CreateModel(
            name='AddPackets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('noOfPackets', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('categoryProductID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FactorySystem.categoryproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='FactorySystem.productprice')),
                ('QTY', models.IntegerField(blank=True, default=1, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'db_table': 'Cart',
            },
        ),
        migrations.CreateModel(
            name='BillProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product', models.IntegerField()),
                ('Price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('QTY', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('Bill_Number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FactorySystem.bill')),
            ],
            options={
                'db_table': 'Bill_Product',
                'unique_together': {('Bill_Number', 'Product')},
            },
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True)),
                ('daytype', models.CharField(blank=True, choices=[('FD', 'FullDay'), ('HD', 'HalfDay')], max_length=20)),
                ('attendaceStatus', models.CharField(blank=True, choices=[('Pres', 'Present'), ('Abs', 'Absent')], max_length=50)),
                ('empID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='FactorySystem.employee')),
            ],
            options={
                'unique_together': {('date', 'empID')},
            },
        ),
    ]
